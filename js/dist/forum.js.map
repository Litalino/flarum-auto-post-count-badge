{"version":3,"file":"forum.js","mappings":"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","sources":["webpack://@litalino/flarum-auto-post-count-badge/webpack/bootstrap","webpack://@litalino/flarum-auto-post-count-badge/webpack/runtime/compat get default export","webpack://@litalino/flarum-auto-post-count-badge/webpack/runtime/define property getters","webpack://@litalino/flarum-auto-post-count-badge/webpack/runtime/hasOwnProperty shorthand","webpack://@litalino/flarum-auto-post-count-badge/webpack/runtime/make namespace object","webpack://@litalino/flarum-auto-post-count-badge/external root \"flarum.core.compat['forum/app']\"","webpack://@litalino/flarum-auto-post-count-badge/external root \"flarum.core.compat['common/extend']\"","webpack://@litalino/flarum-auto-post-count-badge/external root \"flarum.core.compat['forum/components/CommentPost']\"","webpack://@litalino/flarum-auto-post-count-badge/external root \"flarum.core.compat['forum/components/PostUser']\"","webpack://@litalino/flarum-auto-post-count-badge/external root \"flarum.core.compat['common/models/User']\"","webpack://@litalino/flarum-auto-post-count-badge/external root \"flarum.core.compat['common/Model']\"","webpack://@litalino/flarum-auto-post-count-badge/external root \"flarum.core.compat['common/components/Tooltip']\"","webpack://@litalino/flarum-auto-post-count-badge/./src/forum/index.js"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['forum/app'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/extend'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['forum/components/CommentPost'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['forum/components/PostUser'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/models/User'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/Model'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/components/Tooltip'];","import app from 'flarum/forum/app';\nimport { extend } from 'flarum/common/extend';\nimport PostUser from 'flarum/forum/components/PostUser';\nimport CommentPost from \"flarum/forum/components/CommentPost\";\nimport User from 'flarum/common/models/User';\nimport Model from 'flarum/common/Model';\n//import PostCountBadge from './components/PostCountBadge';\nimport Tooltip from \"flarum/common/components/Tooltip\";\n\napp.initializers.add('litalino/flarum-auto-post-count-badge', () => {\n  User.prototype.autoCountBadge = Model.attribute('autoCountBadge');\n  User.prototype.autoCountBadgeLabel = Model.attribute('autoCountBadgeLabel');\n  User.prototype.autoCountBadgeOn = Model.attribute('autoCountBadgeOn');\n\n\n  extend(CommentPost.prototype, 'headerItems', function (items) {\n    const checkRoute = app.current.get('routeName');\n\n    if (checkRoute === 'discussion' || checkRoute === 'discussion.near' || checkRoute === 'blogArticle') {\n      const post = this.attrs.post;\n      const user = post.user();\n\n      // If we don't have a user, do nothing\n      if (!user) {\n        return;\n      }\n\n      //const userPosts = post.user().commentCount();\n      const userPosts = post.user()?.commentCount();\n      const userClass = post.user().autoCountBadge();\n      const userBadgeLabel = post.user().autoCountBadgeLabel();\n      //console.log(userBadgeLabel);\n\n      // We don't have a class or label, so do nothing\n      if (userClass === \"\" || userBadgeLabel === \"\") {\n        return;\n      }\n\n      //const post = this.attrs.post;\n      //const userPosts = post.user()?.commentCount();\n      const complColor = app.forum.attribute('justoverclock-auto-post-count-badge.bgColor') || 'var(--body-bg-shaded)';\n      //console.log(\"complColor: \" + complColor);\n      const backgrTwo = app.forum.attribute('justoverclock-auto-post-count-badge.bgColorTwo') || 'var(--body-bg-light)';\n      //console.log(\"backgrTwo: \" + backgrTwo);\n\n      if (!post.isHidden()) {\n        //console.log(\"userPosts: \" + userPosts);\n        //console.log(app.forum.attribute('justoverclock-auto-post-count-badge.admin.settings.tier.from'));\n        //console.log(app.forum.attribute('justoverclock-auto-post-count-badge.admin.settings.tier.to'));\n\n        const One_min = \"0\";\n        const One_max = \"9\";\n        if (userPosts >= One_min && userPosts <= One_max) {\n          /*\n          const tierOne =  app.forum.attribute('justoverclock-auto-post-badge.levelOne') || 'fas fa-baby' + ' autopost';\n          const lowerBound = app.forum.attribute('justoverclock-auto-post-count-badge.admin.settings.tierOne.from');\n          const upperBound = app.forum.attribute('justoverclock-auto-post-count-badge.admin.settings.tierOne.to');\n          //const nextBadge = userPosts - upperBound +1;\n          //const resNextBadge = Math.abs(nextBadge);\n          const perc = (userPosts - lowerBound) / (upperBound - lowerBound) * 100;\n          let bgPerc = `background: -webkit-linear-gradient(left, ${complColor} ${perc}%,${backgrTwo} ${perc}%) !important;`\n          //let bgPerc = `background: -webkit-linear-gradient(left, ${complColor} ${perc}%,${backgrTwo} ${perc}%) !important;`;\n          */\n          //console.log(\"userPosts: \" + userPosts);\n          //const One =  app.forum.attribute('justoverclock-auto-post-badge-pro.iconOne') || 'fas fa-baby' + ' autopost';\n          const icon_class = app.forum.attribute(\"justoverclock-auto-post-count-badge.levelOne\") || \"fas fa-baby\" + \" autopost\";\n          //const lowerBound = app.forum.attribute('justoverclock-auto-post-badge-pro.fromOne');\n          //const upperBound = app.forum.attribute('justoverclock-auto-post-badge-pro.toOne');\n          const lowerBound = One_min; //app.forum.attribute('justoverclock-auto-post-count-badge.admin.settings.tierOne.from');\n          const upperBound = One_max; //app.forum.attribute('justoverclock-auto-post-count-badge.admin.settings.tierOne.to');\n          const nextBadge = userPosts - upperBound + 1;\n          const resNextBadge = Math.abs(nextBadge);\n          const perc = ((userPosts - lowerBound) / (upperBound - lowerBound)) * 100;\n          let bgPerc = `background: -webkit-linear-gradient(left, ${complColor} ${perc}%,${backgrTwo} ${perc}%) !important;`;\n          //<i class={userClass + ' autopost'} /> {userBadgeLabel}\n          items.add(\n            'autoCountBadgeOn',\n            <Tooltip\n              text={\n                app.translator.trans(\"justoverclock-auto-post-count-badge.forum.nextBadge\") + \" \" + resNextBadge + \" \" +\n                app.translator.trans(\"justoverclock-auto-post-count-badge.forum.posts\") + \" :: \" +\n                app.translator.trans(\"justoverclock-auto-post-count-badge.forum.hasWritten\",\n                  {\n                    count: userPosts,\n                  }\n                )\n              }\n            >\n              <span className=\"auto-badge\" style={bgPerc}>\n                <i class={icon_class} />\n                {app.forum.attribute(\"justoverclock-auto-post-count-badge.badgeOne\") || \"The Baby\"}\n              </span>\n            </Tooltip>\n          );\n        }\n\n        const Two_min = \"10\";\n        const Two_max = \"49\";\n        if (userPosts >= Two_min && userPosts <= Two_max) {\n          //console.log(\"userPosts: \" + userPosts);\n          //const Two =  app.forum.attribute('justoverclock-auto-post-badge-pro.iconTow') || 'fas fa-child' + ' autopost';\n          const icon_class = app.forum.attribute(\"justoverclock-auto-post-badge.levelTow\") || \"fas fa-child\" + \" autopost\";\n          //const lowerBound = app.forum.attribute('justoverclock-auto-post-badge-pro.fromOne');\n          //const upperBound = app.forum.attribute('justoverclock-auto-post-badge-pro.toOne');\n          const lowerBound = Two_min; //app.forum.attribute('justoverclock-auto-post-count-badge.admin.settings.tierOne.from');\n          //console.log(\"lowerBound: \" + lowerBound);\n          const upperBound = Two_max; //app.forum.attribute('justoverclock-auto-post-count-badge.admin.settings.tierOne.to');\n          //console.log(\"upperBound: \" + upperBound);\n          const nextBadge = userPosts - upperBound + 1;\n          //console.log(\"nextBadge: \" + nextBadge);\n          const resNextBadge = Math.abs(nextBadge);\n          //console.log(\"resNextBadge: \" + resNextBadge);\n          const perc = ((userPosts - lowerBound) / (upperBound - lowerBound)) * 100;\n          //console.log(\"perc: \" + perc);\n          let bgPerc = `background: -webkit-linear-gradient(left, ${complColor} ${perc}%,${backgrTwo} ${perc}%) !important;`;\n          //console.log(\"bgPerc: \" + bgPerc);\n          items.add(\n            'autoCountBadgeOn',\n            <Tooltip\n              text={\n                app.translator.trans(\"justoverclock-auto-post-count-badge.forum.nextBadge\") + \" \" + resNextBadge + \" \" +\n                app.translator.trans(\"justoverclock-auto-post-count-badge.forum.posts\") + \" :: \" +\n                app.translator.trans(\"justoverclock-auto-post-count-badge.forum.hasWritten\",\n                  {\n                    count: userPosts,\n                  }\n                )\n              }\n            >\n              <span className=\"auto-badge\" style={bgPerc}>\n                <i class={icon_class} />\n                {app.forum.attribute(\"justoverclock-auto-post-count-badge.badgeOne\") || \"The Baby\"}\n              </span>\n            </Tooltip>\n          );\n        }\n\n        const Tree_min = \"50\";\n        const Tree_max = \"99\";\n        if (userPosts >= Tree_min && userPosts <= Tree_max) {\n          //console.log(\"userPosts: \" + userPosts);\n          const icon_class = app.forum.attribute(\"justoverclock-auto-post-badge.levelTree\") || \"fas fa-bullhorn\" + \" autopost\";\n          const lowerBound = Tree_min; //app.forum.attribute('justoverclock-auto-post-count-badge.admin.settings.One.from');\n          const upperBound = Tree_max; //app.forum.attribute('justoverclock-auto-post-count-badge.admin.settings.One.to');\n          const nextBadge = userPosts - upperBound + 1;\n          const resNextBadge = Math.abs(nextBadge);\n          const perc = ((userPosts - lowerBound) / (upperBound - lowerBound)) * 100;\n          let bgPerc = `background: -webkit-linear-gradient(left, ${complColor} ${perc}%,${backgrTwo} ${perc}%) !important;`;\n          items.add(\n            'autoCountBadgeOn',\n            <Tooltip\n              text={\n                app.translator.trans(\"justoverclock-auto-post-count-badge.forum.nextBadge\") + \" \" + resNextBadge + \" \" +\n                app.translator.trans(\"justoverclock-auto-post-count-badge.forum.posts\") + \" :: \" +\n                app.translator.trans(\"justoverclock-auto-post-count-badge.forum.hasWritten\",\n                  {\n                    count: userPosts,\n                  }\n                )\n              }\n            >\n              <span className=\"auto-badge\" style={bgPerc}>\n                <i class={icon_class} />\n                {app.forum.attribute(\"justoverclock-auto-post-count-badge.badgeOne\") || \"The Baby\"}\n              </span>\n            </Tooltip>\n          );\n        }\n\n        const Four_min = \"100\";\n        const Four_max = \"299\";\n        if (userPosts >= Four_min && userPosts <= Four_max) {\n          //console.log(\"userPosts: \" + userPosts);\n          const icon_class = app.forum.attribute(\"justoverclock-auto-post-badge.levelFour\") || \"fas fa-chalkboard-teacher\" + \" autopost\";\n          const lowerBound = Four_min; //app.forum.attribute('justoverclock-auto-post-count-badge.admin.settings.One.from');\n          const upperBound = Four_max; //app.forum.attribute('justoverclock-auto-post-count-badge.admin.settings.One.to');\n          const nextBadge = userPosts - upperBound + 1;\n          const resNextBadge = Math.abs(nextBadge);\n          const perc = ((userPosts - lowerBound) / (upperBound - lowerBound)) * 100;\n          let bgPerc = `background: -webkit-linear-gradient(left, ${complColor} ${perc}%,${backgrTwo} ${perc}%) !important;`;\n          items.add(\n            'autoCountBadgeOn',\n            <Tooltip\n              text={\n                app.translator.trans(\"justoverclock-auto-post-count-badge.forum.nextBadge\") + \" \" + resNextBadge + \" \" +\n                app.translator.trans(\"justoverclock-auto-post-count-badge.forum.posts\") + \" :: \" +\n                app.translator.trans(\"justoverclock-auto-post-count-badge.forum.hasWritten\",\n                  {\n                    count: userPosts,\n                  }\n                )\n              }\n            >\n              <span className=\"auto-badge\" style={bgPerc}>\n                <i class={icon_class} />\n                {app.forum.attribute(\"justoverclock-auto-post-count-badge.badgeOne\") || \"The Baby\"}\n              </span>\n            </Tooltip>\n          );\n        }\n\n        const Five_min = \"300\";\n        const Five_max = \"599\";\n        if (userPosts >= Five_min && userPosts <= Five_max) {\n          //console.log(\"userPosts: \" + userPosts);\n          const icon_class = app.forum.attribute(\"justoverclock-auto-post-badge.levelFive\") || \"fas fa-monster\" + \" autopost\";\n          const lowerBound = Five_min; //app.forum.attribute('justoverclock-auto-post-count-badge.admin.settings.One.from');\n          const upperBound = Five_max; //app.forum.attribute('justoverclock-auto-post-count-badge.admin.settings.One.to');\n          const nextBadge = userPosts - upperBound + 1;\n          const resNextBadge = Math.abs(nextBadge);\n          const perc = ((userPosts - lowerBound) / (upperBound - lowerBound)) * 100;\n          let bgPerc = `background: -webkit-linear-gradient(left, ${complColor} ${perc}%,${backgrTwo} ${perc}%) !important;`;\n          items.add(\n            'autoCountBadgeOn',\n            <Tooltip\n              text={\n                app.translator.trans(\"justoverclock-auto-post-count-badge.forum.nextBadge\") + \" \" + resNextBadge + \" \" +\n                app.translator.trans(\"justoverclock-auto-post-count-badge.forum.posts\") + \" :: \" +\n                app.translator.trans(\"justoverclock-auto-post-count-badge.forum.hasWritten\",\n                  {\n                    count: userPosts,\n                  }\n                )\n              }\n            >\n              <span className=\"auto-badge\" style={bgPerc}>\n                <i class={icon_class} />\n                {app.forum.attribute(\"justoverclock-auto-post-count-badge.badgeOne\") || \"The Baby\"}\n              </span>\n            </Tooltip>\n          );\n        }\n\n        const Six_min = \"600\";\n        const Six_max = \"999\";\n        if (userPosts >= Six_min && userPosts <= Six_max) {\n          //console.log(\"userPosts: \" + userPosts);\n          const icon_class = app.forum.attribute(\"justoverclock-auto-post-badge.levelSix\") || \"fas fa-graduation-cap\" + \" autopost\";\n          const lowerBound = Six_min; //app.forum.attribute('justoverclock-auto-post-count-badge.admin.settings.One.from');\n          const upperBound = Six_max; //app.forum.attribute('justoverclock-auto-post-count-badge.admin.settings.One.to');\n          const nextBadge = userPosts - upperBound + 1;\n          const resNextBadge = Math.abs(nextBadge);\n          const perc = ((userPosts - lowerBound) / (upperBound - lowerBound)) * 100;\n          let bgPerc = `background: -webkit-linear-gradient(left, ${complColor} ${perc}%,${backgrTwo} ${perc}%) !important;`;\n          items.add(\n            'autoCountBadgeOn',\n            <Tooltip\n              text={\n                app.translator.trans(\"justoverclock-auto-post-count-badge.forum.nextBadge\") + \" \" + resNextBadge + \" \" +\n                app.translator.trans(\"justoverclock-auto-post-count-badge.forum.posts\") + \" :: \" +\n                app.translator.trans(\"justoverclock-auto-post-count-badge.forum.hasWritten\",\n                  {\n                    count: userPosts,\n                  }\n                )\n              }\n            >\n              <span className=\"auto-badge\" style={bgPerc}>\n                <i class={icon_class} />\n                {app.forum.attribute(\"justoverclock-auto-post-count-badge.badgeOne\") || \"The Baby\"}\n              </span>\n            </Tooltip>\n          );\n        }\n\n        const Seven_min = \"1000\";\n        const Seven_max = \"1999\";\n        if (userPosts >= Seven_min && userPosts <= Seven_max) {\n          //console.log(\"userPosts: \" + userPosts);\n          const icon_class = app.forum.attribute(\"justoverclock-auto-post-badge.levelSeven\") || \"fas fa-medal\" + \" autopost\";\n          const lowerBound = Seven_min; //app.forum.attribute('justoverclock-auto-post-count-badge.admin.settings.One.from');\n          const upperBound = Seven_max; //app.forum.attribute('justoverclock-auto-post-count-badge.admin.settings.One.to');\n          const nextBadge = userPosts - upperBound + 1;\n          const resNextBadge = Math.abs(nextBadge);\n          const perc = ((userPosts - lowerBound) / (upperBound - lowerBound)) * 100;\n          let bgPerc = `background: -webkit-linear-gradient(left, ${complColor} ${perc}%,${backgrTwo} ${perc}%) !important;`;\n          items.add(\n            'autoCountBadgeOn',\n            <Tooltip\n              text={\n                app.translator.trans(\"justoverclock-auto-post-count-badge.forum.nextBadge\") + \" \" + resNextBadge + \" \" +\n                app.translator.trans(\"justoverclock-auto-post-count-badge.forum.posts\") + \" :: \" +\n                app.translator.trans(\"justoverclock-auto-post-count-badge.forum.hasWritten\",\n                  {\n                    count: userPosts,\n                  }\n                )\n              }\n            >\n              <span className=\"auto-badge\" style={bgPerc}>\n                <i class={icon_class} />\n                {app.forum.attribute(\"justoverclock-auto-post-count-badge.badgeOne\") || \"The Baby\"}\n              </span>\n            </Tooltip>\n          );\n        }\n\n        const Eight_min = \"2000\";\n        const Eight_max = \"3999\";\n        if (userPosts >= Eight_min && userPosts <= Eight_max) {\n          //console.log(\"userPosts: \" + userPosts);\n          const icon_class = app.forum.attribute(\"justoverclock-auto-post-badge.levelEight\") || \"fas fa-stethoscope\" + \" autopost\";\n          const lowerBound = Eight_min; //app.forum.attribute('justoverclock-auto-post-count-badge.admin.settings.One.from');\n          const upperBound = Eight_max; //app.forum.attribute('justoverclock-auto-post-count-badge.admin.settings.One.to');\n          const nextBadge = userPosts - upperBound + 1;\n          const resNextBadge = Math.abs(nextBadge);\n          const perc = ((userPosts - lowerBound) / (upperBound - lowerBound)) * 100;\n          let bgPerc = `background: -webkit-linear-gradient(left, ${complColor} ${perc}%,${backgrTwo} ${perc}%) !important;`;\n          items.add(\n            'autoCountBadgeOn',\n            <Tooltip\n              text={\n                app.translator.trans(\"justoverclock-auto-post-count-badge.forum.nextBadge\") + \" \" + resNextBadge + \" \" +\n                app.translator.trans(\"justoverclock-auto-post-count-badge.forum.posts\") + \" :: \" +\n                app.translator.trans(\"justoverclock-auto-post-count-badge.forum.hasWritten\",\n                  {\n                    count: userPosts,\n                  }\n                )\n              }\n            >\n              <span className=\"auto-badge\" style={bgPerc}>\n                <i class={icon_class} />\n                {app.forum.attribute(\"justoverclock-auto-post-count-badge.badgeOne\") || \"The Baby\"}\n              </span>\n            </Tooltip>\n          );\n        }\n\n        const Nine_min = \"4000\";\n        const Nine_max = \"7999\";\n        if (userPosts >= Nine_min && userPosts <= Nine_max) {\n          //console.log(\"userPosts: \" + userPosts);\n          const icon_class = app.forum.attribute(\"justoverclock-auto-post-badge.levelNine\") || \"fas fa-bible\" + \" autopost\";\n          const lowerBound = Nine_min; //app.forum.attribute('justoverclock-auto-post-count-badge.admin.settings.One.from');\n          const upperBound = Nine_max; //app.forum.attribute('justoverclock-auto-post-count-badge.admin.settings.One.to');\n          const nextBadge = userPosts - upperBound + 1;\n          const resNextBadge = Math.abs(nextBadge);\n          const perc = ((userPosts - lowerBound) / (upperBound - lowerBound)) * 100;\n          let bgPerc = `background: -webkit-linear-gradient(left, ${complColor} ${perc}%,${backgrTwo} ${perc}%) !important;`;\n          items.add(\n            'autoCountBadgeOn',\n            <Tooltip\n              text={\n                app.translator.trans(\"justoverclock-auto-post-count-badge.forum.nextBadge\") + \" \" + resNextBadge + \" \" +\n                app.translator.trans(\"justoverclock-auto-post-count-badge.forum.posts\") + \" :: \" +\n                app.translator.trans(\"justoverclock-auto-post-count-badge.forum.hasWritten\",\n                  {\n                    count: userPosts,\n                  }\n                )\n              }\n            >\n              <span className=\"auto-badge\" style={bgPerc}>\n                <i class={icon_class} />\n                {app.forum.attribute(\"justoverclock-auto-post-count-badge.badgeOne\") || \"The Baby\"}\n              </span>\n            </Tooltip>\n          );\n        }\n\n        const Ten_min = \"8000\";\n        const Ten_max = \"9999\";\n        if (userPosts >= Ten_min && userPosts <= Ten_max) {\n          //console.log(\"userPosts: \" + userPosts);\n          const icon_class = app.forum.attribute(\"justoverclock-auto-post-badge.levelTen\") || \"fas fa-user-shield\" + \" autopost\";\n          const lowerBound = Ten_min; //app.forum.attribute('justoverclock-auto-post-count-badge.admin.settings.One.from');\n          const upperBound = Ten_max; //app.forum.attribute('justoverclock-auto-post-count-badge.admin.settings.One.to');\n          const nextBadge = userPosts - upperBound + 1;\n          const resNextBadge = Math.abs(nextBadge);\n          const perc = ((userPosts - lowerBound) / (upperBound - lowerBound)) * 100;\n          let bgPerc = `background: -webkit-linear-gradient(left, ${complColor} ${perc}%,${backgrTwo} ${perc}%) !important;`;\n          items.add(\n            'autoCountBadgeOn',\n            <Tooltip\n              text={\n                app.translator.trans(\"justoverclock-auto-post-count-badge.forum.nextBadge\") + \" \" + resNextBadge + \" \" +\n                app.translator.trans(\"justoverclock-auto-post-count-badge.forum.posts\") + \" :: \" +\n                app.translator.trans(\"justoverclock-auto-post-count-badge.forum.hasWritten\",\n                  {\n                    count: userPosts,\n                  }\n                )\n              }\n            >\n              <span className=\"auto-badge\" style={bgPerc}>\n                <i class={icon_class} />\n                {app.forum.attribute(\"justoverclock-auto-post-count-badge.badgeOne\") || \"The Baby\"}\n              </span>\n            </Tooltip>\n          );\n        }\n\n      }\n    }\n  });\n});"],"names":["__webpack_require__","module","getter","__esModule","d","a","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","Symbol","toStringTag","value","flarum","core","compat","app","add","User","autoCountBadge","Model","autoCountBadgeLabel","autoCountBadgeOn","extend","CommentPost","items","checkRoute","post","this","attrs","user","userPosts","commentCount","userClass","userBadgeLabel","complColor","attribute","backgrTwo","isHidden","icon_class","nextBadge","resNextBadge","Math","abs","perc","bgPerc","text","trans","count","className","style","class","Seven_min","Seven_max","lowerBound","Eight_min","Eight_max","Nine_min","Nine_max","Ten_min","Ten_max"],"sourceRoot":""}